// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace RenewalTML.Shared.Forms
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
#nullable restore
#line 1 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Designing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Navigation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Notifications;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Transactions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Validation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Clients;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Exstention.ClassAddons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Exstention;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Pages.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data.Dto;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data.JSInteropHelper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Blazorise.Utilities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Linq.Expressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Reflection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\Shared\Forms\MarkDownEditor.razor"
using Microsoft.AspNetCore.Hosting;

#line default
#line hidden
#nullable disable
    public partial class MarkDownEditor : BaseTextInput<string>
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 61 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\Shared\Forms\MarkDownEditor.razor"
       
    [Parameter] public string Text { get; set; }

    [Parameter] public EventCallback<string> TextChanged { get; set; }

    [Parameter] public Expression<Func<string>> Field { get; set; }

    [Parameter] public string EditorType { get; set; }

    [Parameter] public string UniqName { get; set; }

    protected override string InternalValue { get => Text; set => Text = value; }
    private string StatuChangerName { get; set; }

    private Modal modalUploadImage { get; set; }
    private ValidationMessageBlock UploadImageBlock { get; set; }

    private int progressBarImageLoader { get; set; }
    private bool isProgressBarImageLoader { get; set; }

    private bool isImageUploaded { get; set; }
    private IFileEntry imageUploaded { get; set; }

    //

    // mini:
    // * bold, header ( h1 или какой там ), без автосохранения
    // premium
    // mini + автосохранение, цитаты, список, ссылки
    // ultimate
    // premium + кастомные картинки, блок кода.

    // кастомные:

    // upBalance - пополнение счёта. Только ссылки можно вставлять.

    private string InputCode { get; set; }
    private bool isLoaded { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var dotNetPtr = DotNetObjectReference.Create(this);

        InputCode = ClientAuthServices.GenerateRandomString(10, false).ToUpperInvariant();
        StatuChangerName = "system"; // system or user

        await _js.InvokeVoidAsync("loadScript", "libs/easymde.js/easymde.min.js");
        await _js.InvokeVoidAsync("loadScript", "libs/easymde.js/purify.min.js");

        await _js.InvokeVoidAsync("MarkDown.MarkDownCreate", "#markdownEditor-" + InputCode, EditorType, UniqName, ReadOnly, dotNetPtr);

        if (Text != null)
            await _js.InvokeVoidAsync("MarkDown.MarkDownSetData", "#markdownEditor-" + InputCode, Text);

        isLoaded = true;
    }

    //public async Task SetData(string data) => await _js.InvokeVoidAsync("MarkDown.MarkDownSetData", "#markdownEditor-" + InputCode, data);
    //public async Task ClearMarkDown() => await _js.InvokeVoidAsync("MarkDown.ClearMarkDown", "#markdownEditor-" + InputCode);
    //public async Task<string> GetData(bool isHtml) => await _js.InvokeAsync<string>("MarkDown.GetDataMarkDownEditor", "#markdownEditor-" + InputCode, isHtml); // получаем данные с mark down editor'а

    [JSInvokable("UpdateMarkDownStatus")]
    public async Task UpdateMarkDownStatus(string value) => ParentValidation.NotifyValidationStatusChanged(Enum.Parse<ValidationStatus>(value));

    [JSInvokable("StartUploadImage")]
    public async Task StartUploadImage()
    {
        isProgressBarImageLoader = true;
        modalUploadImage.Show();
    }

    private async Task ChangeData(string data)
    {
        var context = new ValidationContext(data, null, null);
        var results = new List<ValidationResult>();

        var attrs = ComponentUtils.GetExpressionCustomAttributes(Field);

        Validator.TryValidateValue(data, context, results, attrs);

        if (results.Any()) ParentValidation.NotifyValidationStatusChanged(ValidationStatus.Error, results.Select(m => m.ErrorMessage).ToList());
        else ParentValidation.NotifyValidationStatusChanged(ValidationStatus.Success);

        StatuChangerName = "userchanged-" + data;
        StateHasChanged();

        await TextChanged.InvokeAsync(data);
    }

    [JSInvokable("UpdateMarkDownValue")]
    public async Task UpdateMarkDownValue(string value) => await ChangeData(value);

    private void HideEditImageModel()
    {
        imageUploaded = null;
        isImageUploaded = false;
        isProgressBarImageLoader = false;
        progressBarImageLoader = 0;

        UploadImageBlock = null;

        modalUploadImage.Hide();
    }

    void OnProgressed(FileProgressedEventArgs e)
    {
        int percent = (Convert.ToInt32(e.Percentage - 10) < 0) ? 0 : Convert.ToInt32(e.Percentage - 10);
        progressBarImageLoader = percent;
        //StateHasChanged();
    }

    async Task OnChangedFile(FileChangedEventArgs e)
    {
        var file = e.Files.FirstOrDefault();

        if (file == null)
        {
            UploadImageBlock = new ValidationMessageBlock("Что-то пошло не так при загрузке файлов.", "error");
            return;
        }
        if (!VirtualFileManager.imageMimeTypes.Contains(file.Type))
        {
            UploadImageBlock = new ValidationMessageBlock("Загружаемый файл не является изоображением.", "error");
            return;
        }

        if ((file.Size / (1024 * 1024)) > 2) // 2 mb limit
        {
            UploadImageBlock = new ValidationMessageBlock("Загружаемый файл слишком большой.", "error");
            return;
        }

        isProgressBarImageLoader = true;
        progressBarImageLoader = 0;
        StateHasChanged();

        imageUploaded = file;
        isImageUploaded = true;

        var fileStatic = new VirtualFileStatic(_webhostManager, _fileManager);

        var megafile = await fileStatic.GenerateWebpFile(imageUploaded, Convert.ToDouble(imageUploaded.Size) / (1024.0 * 1024.0));
        // файл загрузили

        progressBarImageLoader = 100;

        var retImage = await _fileManager.GetPhysicFileUrl(megafile.MainImageId);
        await _js.InvokeVoidAsync("MarkDown.AddImageToEditor", "#markdownEditor-" + InputCode, retImage);

        // js add image url to edtior

        StateHasChanged();
        HideEditImageModel();
    }

    /* inherit's */

    protected override void BuildClasses(ClassBuilder builder)
    {
        builder.Append("is-invalid", ParentValidation?.Status == ValidationStatus.Error);
        builder.Append("is-valid", ParentValidation?.Status == ValidationStatus.Success);
        builder.Append("", ParentValidation?.Status == ValidationStatus.None);

        base.BuildClasses(builder);
    }

    protected override Task OnInternalValueChanged(string value) => TextChanged.InvokeAsync(value);
    protected override Task<ParseValue<string>> ParseValueFromStringAsync(string value) => Task.FromResult(new ParseValue<string>(true, value, null));

    public async override Task SetParametersAsync(ParameterView parameters)
    {
        parameters.SetParameterProperties(this);
        await base.SetParametersAsync(ParameterView.Empty);

        if (ParentValidation != null)
            await InitializeValidation();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IWebHostEnvironment _webhostManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVirtualFileServices _fileManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVirtualFileServices _fileServices { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IClientAuthServices _clientServices { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime _js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager UriHelper { get; set; }
    }
}
#pragma warning restore 1591

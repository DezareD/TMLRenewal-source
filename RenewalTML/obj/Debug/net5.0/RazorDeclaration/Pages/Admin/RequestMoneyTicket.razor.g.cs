// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace RenewalTML.Pages.Admin
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
#nullable restore
#line 1 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Designing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Navigation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Notifications;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Transactions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Validation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Clients;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Exstention.ClassAddons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Shared.Exstention;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Pages.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Blazorise;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data.Dto;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using RenewalTML.Data.JSInteropHelper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Blazorise.Utilities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 30 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Threading.Tasks;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Linq.Expressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\_Imports.razor"
using System.Reflection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\Pages\Admin\RequestMoneyTicket.razor"
using RenewalTML.Data.Dto.Admin;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/apanel/tickets/requestMoney")]
    public partial class RequestMoneyTicket : RenewalTMLComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 110 "C:\Users\Fearp\source\repos\RenewalTML\RenewalTML\Pages\Admin\RequestMoneyTicket.razor"
       

    private FillBalanceTicketModel FillBalanceTickets_last { get; set; }
    private int FillBalanceTickets_count { get; set; }

    /* REQUEST MONEY */

    private ContextValidationModule<AdminRequestTicketModel> _adminRequestTicketApprovalModule { get; set; }

    private ValidationMessageBlock RequestMoneyError { get; set; }

    private MultiImageForm _refMultiImageForm { get; set; }

    private Client adminViewer { get; set; }

    private bool isStartRequestMoney { get; set; }

    private async Task CheckRequest()
    {
        if (isStartRequestMoney == true)
        {
            RequestMoneyError = new ValidationMessageBlock("Дождитесь окончания загрузки предидущего действия...", "error");
            await _js.InvokeVoidAsync("ScrollHelper.ScrollToTop");
            StateHasChanged();
            return;
        }

        if (String.IsNullOrEmpty(_adminRequestTicketApprovalModule._model.AdminApproval) || (_adminRequestTicketApprovalModule._model.AdminApproval != "ok" && _adminRequestTicketApprovalModule._model.AdminApproval != "no"))
        {
            RequestMoneyError = new ValidationMessageBlock("Вы обязаны выбрать результат заявки.", "error");
            _adminRequestTicketApprovalModule.SetFieldStatus("AdminApproval", ValidationStatus.Error);
            await _js.InvokeVoidAsync("ScrollHelper.ScrollToTop");
            StateHasChanged();
            return;
        }

        if (_adminRequestTicketApprovalModule._model.Money <= 0)
        {
            RequestMoneyError = new ValidationMessageBlock("Неверное количество денег.", "error");
            _adminRequestTicketApprovalModule.SetFieldStatus("Money", ValidationStatus.Error);
            await _js.InvokeVoidAsync("ScrollHelper.ScrollToTop");
            StateHasChanged();
            return;
        }

        if(_adminRequestTicketApprovalModule._model.AdminApproval == "no" && String.IsNullOrEmpty(_adminRequestTicketApprovalModule._model.AdminText))
        {
            RequestMoneyError = new ValidationMessageBlock("В случае отрицательного результата проверки заявки, должна быть указана причина.", "error");
            _adminRequestTicketApprovalModule.SetFieldStatus("AdminText", ValidationStatus.Error);
            await _js.InvokeVoidAsync("ScrollHelper.ScrollToTop");
            StateHasChanged();
            return;
        }

        isStartRequestMoney = true;

        StateHasChanged();

        var ticket = await _ticketServices.GetTicket(FillBalanceTickets_last._ticket.Id);

        if (ticket.TicketStatus == "status_waiting")
        {

            ticket.AdminInformation = _adminRequestTicketApprovalModule._model.AdminText;
            ticket.AdminViewdId = adminViewer.Id;
            ticket.DataView = DateTimeAddon.NowDateTimeStrings();
            ticket.JsonObject = JsonConvert.SerializeObject(new FillBalanceTicketModel()
            {
                CountMoney = _adminRequestTicketApprovalModule._model.Money,
                TextInformation = _adminRequestTicketApprovalModule._model.Text,
                ImagesIds = FillBalanceTickets_last.ImagesIds
            });

            if (_adminRequestTicketApprovalModule._model.AdminApproval == "ok")
                ticket.TicketStatus = "status_accepted";
            else ticket.TicketStatus = "status_declaim";

            await _ticketServices.UpdateTicket(ticket);

            FillBalanceTickets_last.CountMoney = _adminRequestTicketApprovalModule._model.Money;

            var client = await _userServices.FindUserById(FillBalanceTickets_last._ticket.UserCreateId);

            await _economicsServices.CompleteRequest(_adminRequestTicketApprovalModule._model.AdminApproval == "ok", FillBalanceTickets_last, client);
            RequestMoneyError = null;
        }

        await UpdateTicket();

        isStartRequestMoney = false;
        await _js.InvokeVoidAsync("ScrollHelper.ScrollToTop");

        StateHasChanged();
    }

    private async Task UpdateTicket()
    {
        FillBalanceTickets_last = await _ticketServices.GetFillBalanceLastTickets();
        FillBalanceTickets_count = await _ticketServices.GetFillBalanceLastTicketsCount();

        await _applicationContainer.navbar_ref.EventNavbarUpdate();

        if (FillBalanceTickets_last != null)
        {
            _adminRequestTicketApprovalModule._model.Money = FillBalanceTickets_last.CountMoney;
            _adminRequestTicketApprovalModule._model.AdminApproval = null;
            _adminRequestTicketApprovalModule._model.Text = FillBalanceTickets_last.TextInformation;
            _adminRequestTicketApprovalModule._model.AdminText = "";

            _adminRequestTicketApprovalModule._model.FillTicketImages = ComponentUtils.MultiImageFormRecreate(isReadOnly: true);

            int index = 0;

            foreach (var k in FillBalanceTickets_last.ImagesIds)
            {
                var img = await _fileManager.GetPhysicFileUrl(k);

                _adminRequestTicketApprovalModule._model.FillTicketImages[index].ImageId = k;
                _adminRequestTicketApprovalModule._model.FillTicketImages[index].ImageUrl = img;

                index++;
            }

            _adminRequestTicketApprovalModule.SetFielAllStatus(ValidationStatus.None);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        adminViewer = await _userServices.GetClient();
        var role = await _roleServices.GetRoleAsync(adminViewer.RoleId);

        if (role.isHaveAccesToAdminPanel && role.isHaveToModerateUserAccount)
        {
            _adminRequestTicketApprovalModule = new ContextValidationModule<AdminRequestTicketModel>(new AdminRequestTicketModel());
            await UpdateTicket();

            await ChangePageLoadStatus(true);
        }
        else await _virtualNavigationServices.ReRedirectClient(VirtualNavigationServices.accessDeniedUrl, hardLoad: true);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IEconomicsServices _economicsServices { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVirtualFileServices _fileManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ITicketServices _ticketServices { get; set; }
    }
}
#pragma warning restore 1591
